<?php

declare(strict_types=1);

namespace Chiron\Testing\Constraint\Response;

use Cake\Http\Response;
use Psr\Http\Message\ResponseInterface;

/**
 * CookieEquals
 *
 * @internal
 */
class CookieEquals extends ResponseBase
{
    /**
     * @var \Cake\Http\Response
     */
    protected ResponseInterface $response;

    /**
     * @var string
     */
    protected string $cookieName;

    /**
     * Constructor.
     *
     * @param \Cake\Http\Response|null $response A response instance.
     * @param string $cookieName Cookie name
     */
    public function __construct(?Response $response, string $cookieName)
    {
        parent::__construct($response);

        $this->cookieName = $cookieName;
    }

    /**
     * Checks assertion
     *
     * @param mixed $other Expected content
     * @return bool
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint
     */
    public function matches($other): bool
    {
        $cookie = $this->response->getCookie($this->cookieName);

        return $cookie !== null && $cookie['value'] === $other;
    }

    /**
     * Assertion message
     *
     * @return string
     */
    public function toString(): string
    {
        return sprintf('is in cookie \'%s\'', $this->cookieName);
    }
}
